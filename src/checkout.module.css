.step-indicator {
    --deco-size: 1.7em;
    --bdr-width: 2px;
    --deco-color: var(--system-color-gray);
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    font-size: 0.8em;
}

.step-indicator p {
    position: var(--content-position, absolute);
    clip-path: var(--content-clip, inset(50%));
}

.step-indicator>.step-active,
.step-indicator> :not(.step-active ~ *) {
    --deco-color: var(--system-color-orange);
    --deco-bg: var(--deco-color);
    --deco-colorText: #fafafa;
}

.step-indicator>* {
    padding-block: var(--b-padding, 0 2em);
    counter-increment: indicator;
    position: relative;
    text-align: center;
}

.step-indicator>*:first-child {
    --deco-img: linear-gradient(var(--gradient-dir, to right), transparent calc(var(--deco-size) + 2px), var(--deco-color) 0);
    --deco-margin: 0 auto;
    text-align: start;
}

.step-indicator>*:last-child {
    --deco-img: linear-gradient(var(--gradient-dir, to right), var(--deco-color) calc(100% - var(--deco-size) - 4px), transparent 0);
    --deco-margin: auto 0;
    text-align: end;
}

.step-indicator>*:not(:last-child, :first-child) {
    padding-inline: var(--i-padding, 0.5em);
}

.step-indicator>*::after {
    content: counters(indicator, ".");
    color: var(--deco-colorText, currentColor);
    position: absolute;
    display: inline-grid;
    place-content: center;
    border: var(--bdr-width) solid var(--deco-color);
    border-radius: 50%;
    inline-size: var(--deco-size);
    aspect-ratio: 1;
    inset: var(--inset-after, auto 0 0);
    margin-inline: var(--deco-margin, auto);
    background-color: var(--deco-bg, transparent);
}

.step-indicator > :not(.step-active ~ *, .step-active)::after {
    --deco-size: 1.5rem;
    content: "";
    clip-path: url(#check-circle);
}

.step-indicator>*::before {
    content: "";
    position: absolute;
    display: inline-block;
    block-size: 2px;
    inset: var(--inset-before, auto 0 calc(0.85em - 1px));
    background-image: var(--deco-img, linear-gradient(var(--gradient-dir, to right),
                var(--deco-color) calc(50% - 0.85em - 2px),
                transparent 0 calc(50% + 0.85em + 2px), var(--deco-color) 0));
}

:is(input, select):invalid:not([data-new]) {
    --bdr-clr: var(--system-color-softRed);
}

:is(input, select):invalid:not([data-new])~label {
    color: var(--system-color-softRed);
    display: flex;
    justify-content: space-between;
    align-items: baseline;
}

:is(input, select):invalid:not([data-new])~label::after {
    content: attr(data-error);
    font-size: 0.7em;
    text-transform: none;
}

@media screen and (min-width: 480px) {
    .step-indicator {
        --content-clip: none;
        --content-position: static;
    }

}

@media (prefers-reduced-motion: no-preference) {
    .step-indicator li::before,
    .step-indicator li::after {
        transition: color .35s ease-in, clip-path .35s ease-out, background-color, .35s ease-out;
    }
}
