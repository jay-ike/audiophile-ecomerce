[id="root"] {
    background-color: var(--system-color-pale);
}

.step-indicator {
    --deco-size: 1.7em;
    --bdr-width: 2px;
    --deco-color: var(--system-color-gray);
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    font-size: 0.8em;
}

.step-indicator p {
    --f-size: .8rem;
    position: var(--content-position, absolute);
    clip-path: var(--content-clip, inset(50%));
}

.step-indicator>.step-active,
.step-indicator> :not(.step-active ~ *) {
    --deco-color: var(--system-color-orange);
    --deco-bg: var(--deco-color);
    --deco-colorText: var(--system-color-white);
}

.step-indicator>* {
    padding-block: var(--b-padding, 0 2em);
    counter-increment: indicator;
    position: relative;
    text-align: center;
}

.step-indicator>*:first-child {
    --deco-img: linear-gradient(var(--gradient-dir, to right), transparent calc(var(--deco-size) + 2px), var(--deco-color) 0);
    --deco-margin: 0 auto;
    text-align: start;
}

.step-indicator>*:last-child {
    --deco-img: linear-gradient(var(--gradient-dir, to right), var(--deco-color) calc(100% - var(--deco-size) - 4px), transparent 0);
    --deco-margin: auto 0;
    text-align: end;
}

.step-indicator>*:not(:last-child, :first-child) {
    padding-inline: var(--i-padding, 0.5em);
}

.step-indicator>*::after {
    content: counters(indicator, ".");
    color: var(--deco-colorText, currentColor);
    position: absolute;
    display: inline-grid;
    place-content: center;
    border: var(--bdr-width) solid var(--deco-color);
    border-radius: 50%;
    inline-size: var(--deco-size);
    aspect-ratio: 1;
    inset: var(--inset-after, auto 0 0);
    margin-inline: var(--deco-margin, auto);
    background-color: var(--deco-bg, transparent);
}

.step-indicator> :not(.step-active ~ *, .step-active)::after {
    --deco-size: 1.5rem;
    content: "";
    clip-path: url(#check-circle);
}

.step-indicator>*::before {
    content: "";
    position: absolute;
    display: inline-block;
    block-size: 2px;
    inset: var(--inset-before, auto 0 calc(0.85em - 1px));
    background-image: var(--deco-img, linear-gradient(var(--gradient-dir, to right),
                var(--deco-color) calc(50% - 0.85em - 2px),
                transparent 0 calc(50% + 0.85em + 2px), var(--deco-color) 0));
}

:is(input, select):invalid:not([data-new]) {
    --bdr-clr: var(--system-color-softRed);
}

:is(input, select):invalid:not([data-new])~label {
    color: var(--system-color-softRed);
    display: flex;
    justify-content: space-between;
    align-items: baseline;
}

:is(input, select):invalid:not([data-new])~label::after {
    content: attr(data-error);
    font-size: 0.7em;
    text-transform: none;
}

.c-form {
    --s-space: 1rem;
    margin-block-end: 2rem;
    display: flex;
    flex-flow: column nowrap;
    gap: 1rem;

    & :is(h1, h2) {
        --f-size-diff: .5;
        letter-spacing: 1px;
    }

    &>div {
        --min-padding: 1em;
        --radius: .5rem;
        --color-fill: var(--system-color-white);
        container: checkout / inline-size;
    }
}

.c-recap {

    & dt {
        color: hsl(0, 0%, 43%);
    }

    &>div {
        --s-space: var(--spacer, .5rem);
        display: flex;
        justify-content: space-between;

        &:last-child {
            --spacer: 1.5rem;
            --clr: var(--system-color-orange);
        }
    }

    & dd {
        font-weight: bold;
        color: var(--clr, inherit);

    }
}

.c-dialog {
    --color-fill: var(--system-color-white);
    --radius: .5rem;
    --icon-fill: var(--system-color-orange);
    --icon-size: 4rem;
    --r-space: min(1lvb, 1rem);

    & p:where(h2 + *) {
        color: hsl(0, 0%, 33%);
    }
}

.c-column {
    --min-padding: 1rem;
    display: flex;
    flex-direction: column;
}

:is(.recap-wrapper, .total-box) {
    padding: var(--min-padding, 1.5em);
    background-color: var(--color-fill, transparent);
    color: var(--color-text, currentColor);
    border-radius: var(--radius, 0);
    display: flex;
    flex-flow: column nowrap;
    gap: .5rem;
}

.recap-wrapper {
    display: flex;
    flex-direction: column-reverse;
    --color-fill: hsl(0, 0%, 94%);
    --radius: var(--recap-radius, .5rem .5rem 0 0);
    --f-size: 1.25rem;
    --items-clr: hsl(0, 0%, 33%);

    & > button {
        --min-padding: .5rem .5rem 0;
        color: var(--items-clr);
        border-image: linear-gradient(hsl(0, 0%, 80%), hsl(0, 0%, 80%)) 20% 0 0 / 1px / .2em 0 0;
    }
}

[aria-pressed="false"] ~ .recap-box {
    --max-height: 4.1rem;
    overflow-y: clip;
}

.recap-box {
    max-block-size: var(--max-height, 17rem);
}

.total-box {
    --color-fill: var(--system-color-dark);
    --radius: var(--total-radius, 0 0 .5rem .5rem);
    --color-text: var(--system-color-white);
    justify-content: end;

    & dt {
        color: hsl(0, 0%, 59%);
    }
}

.cancel-btn {
    --min-padding: 0;
    position: absolute;
    inset-inline-end: 1rem;
    inset-block-start: 1rem;
}

@media screen and (min-width: 480px) {
    .step-indicator {
        --content-clip: none;
        --content-position: static;
    }

    .c-column {
        --total-radius: 0 .5rem .5rem 0;
        --recap-radius: .5rem 0 0 .5rem;
        display: grid;
        grid-template-columns: 1fr 1fr;
    }

}

@media screen and (min-width: 768px) {
    .c-form {
        display: grid;
        grid-template-columns: 1.75fr 1fr;
        min-block-size: 60lvb;

        &> :last-child {
            align-self: start;
        }
    }
}

@media (prefers-reduced-motion: no-preference) {

    .step-indicator li::before,
    .step-indicator li::after {
        transition: color .35s ease-in, clip-path .35s ease-out, background-color, .35s ease-out;
    }

    .recap-box {
        transition: max-block-size .35s ease-out;
    }
}
