@layer utilities,
layout,
theme,
typography,
resets;

@font-face {
    font-family: "Just";
    src: url("./assets/JUST Sans Variable.ttf") format("truetype");
    font-weight: 300 900;
    font-feature-settings: "dlig" on, "ordn" on, "ss02" on;
    font-display: swap;
}

body {
    margin: 0;
    font-family: "Just", -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
        sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    line-height: 1.5;
    letter-spacing: .01em;
    word-spacing: 0.05em;
}

@layer typography {
    :is(h1, h2, h3, h4, p, .fluid-type, footer a) {
        font-size: clamp(var(--f-size) * clamp(0.5, 1 - var(--f-size-diff, 0.3), 1),
                var(--f-size-fluid, var(--default-fluid, 3vw)),
                var(--f-size));
    }
    @supports (font-size: 1cqi) {
        :is(h1, h2, h3, h4, p, .fluid-type, footer a) {
            --default-fluid: 5cqi;
        }
    }
}

@layer resets {
    :is(*, ::before, ::after) {
        box-sizing: border-box;
    }

    :is(h2, h3, h4) {
        line-height: 1.2;
        overflow-wrap: break-word;
        hyphens: auto;
        letter-spacing: 0.03em;
    }

    h1 {
        line-height: 1.1;
        letter-spacing: 0.04em;
    }

    :is(body, h1, h2, h3, dl, dt, dd, p) {
        margin: 0;
    }

    img {
        max-inline-size: 100%;
        height: auto;
        display: block;
    }

    :is(ul, ol, fieldset, legend) {
        margin: 0;
        padding: 0;
    }

    :is(summary, ul):where([class]) {
        list-style: none;
    }

    :is(button, fieldset) {
        border: none;
    }

    dialog {
        position: fixed;
        inset: 0;
        margin: auto;
    }

    a:not([class]) {
        --outline-style: dashed;
        text-decoration-thickness: max(0.08em, 1px);
        text-underline-offset: 0.15em;
        color: inherit;
    }

    a:not([class]):where(:focus-visible, :hover) {
        color: var(--system-color-paleOrange);
        text-decoration: currentColor wavy underline;
    }

    :focus-visible {
        --outline-size: max(2px, .3em);
        outline: var(--outline-width, var(--outline-size)) var(--outline-style, solid) var(--outline-clr, currentColor);
        outline-offset: var(--outline-offset, var(--outline-size));
    }

    :target {
        scroll-margin-block-start: 2rem;
    }

    :focus {
        scroll-margin-block-end: 8vh;
    }

    input:where([type="text"]) {
        padding: 0.75em;
        caret-color: var(--system-color-orange, currentColor);
    }

    :is(a, button, input):focus:not(:focus-visible) {
        outline: none;
    }

    p:where(:not([class])) {
        text-align: start;
        text-wrap: balance;
        max-inline-size: 50em;
    }
}

@layer theme {
    :root {
        --system-color-dark: hsl(0, 0%, 6%);
        --system-color-orange: hsl(22, 65%, 57%);
        --system-color-paleOrange: hsl(21, 94%, 75%);
        --system-color-pale: hsl(0, 0%, 98%);
        --system-color-gray: hsl(0, 0%, 95%);
        --system-color-black: hsl(0, 0%, 0%);
        --system-color-white: hsl(0, 0%, 100%);
    }
}

@layer layout {
    .stack>*+* {
        margin-block-start: var(--s-space, 1.5em);
    }

    :is(.row, .column, .segragator) {
        display: flex;
        align-items: var(--alignment, center);
        gap: var(--r-space, var(--c-space, 1.5em));
        justify-content: var(--i-alignment, start);
    }

    :where([aria-hidden="true"], .visually-hidden) {
        position: absolute;
        clip-path: inset(50%);
    }

    .segragator {
        --i-alignment: space-between;
        flex-flow: var(--direction, row) var(--wrap, nowrap);
    }

    .row {
        --alignment: var(--row-align, center);
        flex-flow: var(--row-dir, row) var(--wrap, nowrap);
    }

    .column {
        --alignment: var(--col-align, stretch);
        flex-flow: var(--col-dir, column) var(--wrap, nowrap);
    }

    .center {
        display: grid;
        place-items: center;
        place-content: center;
        gap: var(--s-space, 1.5em);
    }

    :is(header, footer, section, .box) {
        padding: var(--min-padding, 1.5em);
        background-color: var(--color-fill, transparent);
        color: var(--color-text, currentColor);
        border-radius: var(--radius, 0);
    }

    :is(.template-grid, footer) {
        display: grid;
        grid-template: var(--g-template);
        container: var(--container-name, grid) / inline-size;
        gap: var(--g-gap, 1rem);

        &> :first-child {
            grid-area: area1;
        }

        &> :nth-child(2) {
            grid-area: area2;
        }

        &> :nth-child(3) {
            grid-area: area3;
        }

        &> :nth-child(4) {
            grid-area: area4;
        }

        &> :nth-child(5) {
            grid-area: area5;
        }
    }

    footer {
        --color-fill: var(--system-color-dark);
        --color-text: var(--system-color-pale);
        --min-padding: 2em 1.5em 1.5em;
        --g-template: ". area1 ." ". area2 ." "area3 area3 area3" "area4 area4 area4" "area5 area5 area5";
        --f-size: 1rem;
        --c-space: .75rem;
        background-image: linear-gradient(var(--system-color-orange), var(--system-color-orange));
        background-position: var(--deco-pos, left 50% top 0%);
        background-size: 101px 4px;
        background-repeat: no-repeat;
    }

    footer a {
        text-transform: uppercase;
        font-weight: 700;
    }

    footer>p:last-of-type {
        text-transform: capitalize;
    }


    @media screen and (min-width: 480px) {
        footer {
            --deco-pos: left 1.5em top 0%;
            --col-dir: row;
            --g-template: "area1 area1 area1" "area2 area2 area2" "area3 area3 area3" "area4 area4 area5" / 1fr 1fr max-content;

        }
    }

    @media screen and (min-width: 768px) {
        footer {
            --h-pad: clamp(1.5em, 7vw, 165px);
            --deco-pos: left var(--h-pad) top 0%;
            --g-template: "area1 area2 area2" "area3 area3 ." "area3 area3 area5" "area4 area4 .";
            --min-padding: 1.5em var(--h-pad);
        }

        footer>ul {
            justify-self: end;
        }

    }
}
